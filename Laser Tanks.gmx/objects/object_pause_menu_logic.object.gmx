<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Button/Collision rectange dimensions
continue_dimension[0] = 100;
continue_dimension[1] = 750;
continue_dimension[2] = 2500;
continue_dimension[3] = 1150;

quit_dimension[0] = 500;
quit_dimension[1] = 1200;
quit_dimension[2] = 2050;
quit_dimension[3] = 1659;


continue_hovered = false;
quit_hovered = false;
continue_clicked = false;
quit_clicked = false;

window_set_cursor(cr_default);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if collision and clicked
//go to main menu (quit)
//for now just restarts the game until 
//persistence problem is solved 
    if (collision_rectangle(quit_dimension[0],
    quit_dimension[1],
    quit_dimension[2],
    quit_dimension[3],object_block_parent, false, true) == noone){
                game_restart();
               
          }
//if collision and clicked, go to
//previous room (continue)        
  if (collision_rectangle(continue_dimension[0],
    continue_dimension[1],
    continue_dimension[2],
    continue_dimension[3],object_block_parent, false, true) == noone){
                room_goto_previous();
                
          }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create 'buttons' if the mouse hovers over them then they are selected
//on click then do behavior like quit the game (later go to the main menu),
//or continue the game (go back to arena). 

//continue rectangle
//draw_rectangle_colour(continue_dimension[0],continue_dimension[1],continue_dimension[2],continue_dimension[3], c_green, c_green, c_green, c_green, true);
continue_hovered = point_in_rectangle(mouse_x, mouse_y, continue_dimension[0], continue_dimension[1], continue_dimension[2], continue_dimension[3]);
if (continue_hovered){
   // show_debug_message("hovered over/inside continue rectangle");   
    if (mouse_check_button_released(mb_left)){
        continue_clicked = true;
        
    }
        //show_debug_message("clicked inside continue rectangle");
    
}
//quit rectangle
//draw_rectangle_colour(quit_dimension[0],quit_dimension[1],quit_dimension[2],quit_dimension[3], c_red, c_red, c_red, c_red, true);
quit_hovered = point_in_rectangle(mouse_x, mouse_y, quit_dimension[0],quit_dimension[1],quit_dimension[2],quit_dimension[3]);
if (quit_hovered){
    //show_debug_message("hovered over/inside quit rectangle"); 
    if (mouse_check_button_released(mb_left)){
        quit_clicked = true;
        //show_debug_message("clicked inside quit rectangle");
      
    } 
    
     
} 




</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
