<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprite_bullet</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//depth
depth = -10000;

//who the bullet belongs to
owner = noone; 
owner_object = noone;

//play a shooting sound whenever a bullet is shot
can_play_sound = true; 

//set speed of the bullets
speed = 3600 * per_second;

//pulls the bullets toward the ground.
gravity = 0;

//for the bullet hit effect
my_fragment = noone;
hp = 1;


 

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>out_of_bounds();

if (hp == 0){
    create_explosion(15,2000,100, object_bullet_fragment, 1);
    instance_destroy();
}

//Set the color of the instance if its owner exists
if (owner!= noone &amp;&amp; instance_exists(owner)){
    image_blend = owner.image_blend;
}   
   
   if (can_play_sound &amp;&amp; owner_object == object_player){
        audio_play_sound(sound_gunshot_4, -1, 0);
        can_play_sound = false;
    }

//collision with a tank behavior
collided_tank = instance_place(x,y,object_tank_parent);

if (instance_exists(collided_tank) &amp;&amp; collided_tank.id != owner){
     create_score(2, x, y); //create a score object and draw the score effect
     collided_tank.hp +=1//give the collided tank damage
     audio_play_sound(sound_hit_2, 0, 0); //play the sound
     hp = 0;
} // end check for collided tank who is not owner

//display kill info
kill("shot to death")


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_bullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
instance_destroy(other);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="object_block_arena">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>other.hp -= 1;
hp = 0;
other.image_alpha -= other.opacity_decrease_constant;
audio_play_sound(sound_enemy_block_shot, 0 , 0);
create_score(1, x, y); 


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw bounding box
draw_self();
draw_bb();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
