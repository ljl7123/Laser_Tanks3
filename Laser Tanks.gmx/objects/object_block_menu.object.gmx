<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>object_block_parent</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
//Boolean variable that keeps track of whether or not we can play the hover sound.
can_sound = true;
my_color = make_colour_hsv(random(255),255,255);
image_blend = my_color;
audio_sound_gain(sound_menu_hover,.025, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>block_explosion(3, 500, 40, object_block_fragment);

if (object_pause_menu_logic.continue_hovered 
&amp;&amp; collision_rectangle(object_pause_menu_logic.continue_dimension[0],
object_pause_menu_logic.continue_dimension[1],
object_pause_menu_logic.continue_dimension[2],
object_pause_menu_logic.continue_dimension[3],self, true, false)){
    image_blend = c_green;
    if (can_sound){
        audio_play_sound(sound_menu_hover, 0, 0);
        can_sound = false;
    }
    if (object_pause_menu_logic.continue_clicked){
        hp =0;
    }
    
    
    
    
} else if (object_pause_menu_logic.quit_hovered 
&amp;&amp; collision_rectangle(object_pause_menu_logic.quit_dimension[0],
object_pause_menu_logic.quit_dimension[1],
object_pause_menu_logic.quit_dimension[2],
object_pause_menu_logic.quit_dimension[3],self, true, false)){
    image_blend = c_red;
     if (can_sound){
        audio_play_sound(sound_menu_hover,0,0);
        can_sound = false;
     }
       if (object_pause_menu_logic.quit_clicked){
        hp =0;
    }
    
    
} else {
    image_blend = my_color;
    can_sound = true; 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
