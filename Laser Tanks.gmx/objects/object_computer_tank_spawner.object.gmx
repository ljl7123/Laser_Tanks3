<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create a new computer tank every three seconds.
//Could use an alarm, rather just control using my own variables.
default_time = 300 * per_second;

time_to_warning = default_time;
time_to_spawn = default_time;
start_decrease_time_to_spawn = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if the spawn timer is less than or equal to zero
    if (time_to_spawn &lt;=0){
        //play the spawn sound
        audio_play_sound(sound_tank_spawn_2,-1,0);
        //create an instance of the computer tank at the same random place where the warning sighn was (and with the same colour)
        new_tank = instance_create(x_random, y_random, object_computer_tank);
        new_tank.image_blend = new_warning.image_blend;
        //destroy the warning instnace
        instance_destroy(new_warning);
        //reset the spawn timer
        time_to_spawn = default_time;
        //set this to false so it doesn't start decreasing before there is a new warning sign
        start_decrease_time_to_spawn= false;
    }


//If the flashing warning sign timer is less than or equal to zero
if (time_to_warning &lt;= 0){
    //then set a new and y coordinate at a random position in the room
    x_random = (100 + view_xview[0]) + random(view_wview[0] - 100);
    y_random = (100 + view_yview[0]) + random(view_hview[0] - 100);
    
    //create an instance in those random postions
    new_warning = instance_create(x_random, y_random, object_warning);
    new_warning.image_blend = make_colour_hsv(random(255),255,255);
    //restart the warning timer
    time_to_warning = default_time;
    
    //start the spawn timer
    start_decrease_time_to_spawn = true;
}

//Decrease once a second 
time_to_warning -= per_second;

if (start_decrease_time_to_spawn){
    time_to_spawn-= per_second;
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
